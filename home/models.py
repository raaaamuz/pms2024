from django.db import models

class Norms(models.Model):
    # project_name = models.CharField(max_length=100)
    # project_no = models.CharField(max_length=50)
    # year = models.CharField(max_length=100,blank=True)
    
    projectname	=	models.CharField(max_length=100,blank=True)
    jobno	=	models.CharField(max_length=100,blank=True)
    year	=	models.CharField(max_length=100,blank=True)
    clientname	=	models.CharField(max_length=100,blank=True)
    countrycode	=	models.CharField(max_length=100,blank=True)
    supercategory	=	models.CharField(max_length=100,blank=True)
    category	=	models.CharField(max_length=100,blank=True)
    subcategory	=	models.CharField(max_length=100, blank=True)
    brand	=	models.CharField(max_length=100, blank=True)
    variant	=	models.CharField(max_length=100, blank=True)
    productformat	=	models.CharField(max_length=100, blank=True)
    studytype	=	models.CharField(max_length=100,blank=True)
    studydesign	=	models.CharField(max_length=100,blank=True)
    placeofinterview	=	models.CharField(max_length=100,blank=True)
    blindbranded	=	models.CharField(max_length=100,blank=True)
    respondentid	=	models.CharField(max_length=100,blank=True)
    productcode	=	models.CharField(max_length=100, blank=True)
    city	=	models.CharField(max_length=100, blank=True)
    genderofrespondent	=	models.CharField(max_length=100,blank=True)
    nationality	=	models.CharField(max_length=100,blank=True)
    exactage	=	models.CharField(max_length=100,blank=True)
    secnew	=	models.CharField(max_length=100,blank=True)
    scaleoverallopinion	=	models.CharField(max_length=100, blank=True)
    scalepurchaseintention	=	models.CharField(max_length=100, blank=True)
    scaleproductattributes	=	models.CharField(max_length=100, blank=True)
    overallopinion	=	models.CharField(max_length=100,blank=True)
    liking	=	models.CharField(max_length=100,blank=True)
    purchaseintentionunpriced	=	models.CharField(max_length=100,blank=True)
    purchaseintentionpriced	=	models.CharField(max_length=100,blank=True)
    relevance	=	models.CharField(max_length=100,blank=True)
    uniqueness	=	models.CharField(max_length=100,blank=True)
    valueformoney	=	models.CharField(max_length=100,blank=True)
    appearance	=	models.CharField(max_length=100,blank=True)
    color	=	models.CharField(max_length=100,blank=True)
    aromasmell	=	models.CharField(max_length=100,blank=True)
    taste	=	models.CharField(max_length=100,blank=True)
    flavor	=	models.CharField(max_length=100,blank=True)
    sweetness	=	models.CharField(max_length=100,blank=True)
    saltiness	=	models.CharField(max_length=100,blank=True)
    sourness	=	models.CharField(max_length=100,blank=True)
    bitterness	=	models.CharField(max_length=100,blank=True)
    texture	=	models.CharField(max_length=100,blank=True)
    thickness	=	models.CharField(max_length=100,blank=True)
    mouthfeel	=	models.CharField(max_length=100,blank=True)
    aftertaste	=	models.CharField(max_length=100,blank=True)
    creaminess	=	models.CharField(max_length=100,blank=True)
    milkiness	=	models.CharField(max_length=100,blank=True)
    freshness	=	models.CharField(max_length=100,blank=True)
    carbonation	=	models.CharField(max_length=100,blank=True)
    sizeoffruitpieces	=	models.CharField(max_length=100,blank=True)
    qtyoffruitpieces	=	models.CharField(max_length=100,blank=True)
    tasteoffruitpieces	=	models.CharField(max_length=100,blank=True)
    naturaltasteoffruitpieces	=	models.CharField(max_length=100,blank=True)
    mouthfeeloffruitpieces	=	models.CharField(max_length=100,blank=True)
    cheesetaste	=	models.CharField(max_length=100,blank=True)
    fattiness	=	models.CharField(max_length=100,blank=True)
    stomachfeel	=	models.CharField(max_length=100,blank=True)
    freshtaste	=	models.CharField(max_length=100,blank=True)
    smoothness	=	models.CharField(max_length=100,blank=True)
    shine	=	models.CharField(max_length=100,blank=True)
    size	=	models.CharField(max_length=100,blank=True)
    aromaorsmell	=	models.CharField(max_length=100,blank=True)
    aromaorsmellaftermixingwithsalad	=	models.CharField(max_length=100,blank=True)
    milkyaroma	=	models.CharField(max_length=100,blank=True)
    indulgingtaste	=	models.CharField(max_length=100,blank=True)
    naturaltaste	=	models.CharField(max_length=100,blank=True)
    tasteofmilk	=	models.CharField(max_length=100,blank=True)
    creamytaste	=	models.CharField(max_length=100,blank=True)
    tasterichincream	=	models.CharField(max_length=100,blank=True)
    naturalsweetness	=	models.CharField(max_length=100,blank=True)
    naturalsaltiness	=	models.CharField(max_length=100,blank=True)
    freshingredients	=	models.CharField(max_length=100,blank=True)
    textureorconsistency	=	models.CharField(max_length=100,blank=True)
    creamytexture	=	models.CharField(max_length=100,blank=True)
    firmness	=	models.CharField(max_length=100,blank=True)
    lightness	=	models.CharField(max_length=100,blank=True)
    spreadability	=	models.CharField(max_length=100,blank=True)
    pourability	=	models.CharField(max_length=100,blank=True)
    stickiness	=	models.CharField(max_length=100,blank=True)
    crispiness	=	models.CharField(max_length=100,blank=True)
    oiliness	=	models.CharField(max_length=100,blank=True)
    tastegoodforbreakfast	=	models.CharField(max_length=100,blank=True)
    qualityofpotato	=	models.CharField(max_length=100,blank=True)
    easeofmixingduringfoodpreparation	=	models.CharField(max_length=100,blank=True)
    acidityofoil	=	models.CharField(max_length=100,blank=True)
    tasteofenddish	=	models.CharField(max_length=100,blank=True)
    likelihoodtorecommend	=	models.CharField(max_length=100,blank=True)
    colour	=	models.CharField(max_length=100,blank=True)
    easeofspreading	=	models.CharField(max_length=100,blank=True)
    thicknessorconsistency	=	models.CharField(max_length=100,blank=True)
    smellorfragrance	=	models.CharField(max_length=100,blank=True)
    mildorgentle	=	models.CharField(max_length=100,blank=True)
    shineofhairextension	=	models.CharField(max_length=100,blank=True)
    softnessofhairextension	=	models.CharField(max_length=100,blank=True)
    smoothnessofhairextension	=	models.CharField(max_length=100,blank=True)
    strengthofhairextension	=	models.CharField(max_length=100,blank=True)
    quantityinsinglepack	=	models.CharField(max_length=100,blank=True)
    easeoffixing	=	models.CharField(max_length=100,blank=True)
    easeofoplaiting	=	models.CharField(max_length=100,blank=True)
    easeofgripping	=	models.CharField(max_length=100,blank=True)
    easeofsplitting	=	models.CharField(max_length=100,blank=True)
    easeoftrimming	=	models.CharField(max_length=100,blank=True)
    neatnessofplaits	=	models.CharField(max_length=100,blank=True)
    extentoftangingduringcombing	=	models.CharField(max_length=100,blank=True)
    extentoftangingduringfixing	=	models.CharField(max_length=100,blank=True)
    comfortonfingers	=	models.CharField(max_length=100,blank=True)
    shineofbraids	=	models.CharField(max_length=100,blank=True)
    softnessofbraids	=	models.CharField(max_length=100,blank=True)
    smoothnessofbraids	=	models.CharField(max_length=100,blank=True)
    thicknessofbraids	=	models.CharField(max_length=100,blank=True)
    heavinessofbraids	=	models.CharField(max_length=100,blank=True)
    overallopiniononfinallook	=	models.CharField(max_length=100,blank=True)
    hairfallwhileapplying	=	models.CharField(max_length=100,blank=True)
    colourofhairpostwashing	=	models.CharField(max_length=100,blank=True)
    shineofhairpostwashing	=	models.CharField(max_length=100,blank=True)
    bodyorvolumeofhairpostwashing	=	models.CharField(max_length=100,blank=True)
    bounceofhairpostwashing	=	models.CharField(max_length=100,blank=True)
    straighteningofhairpostwashing	=	models.CharField(max_length=100,blank=True)
    efficacyoftheproduct	=	models.CharField(max_length=100,blank=True)
    hairfallwhilewashingofftheproduct	=	models.CharField(max_length=100,blank=True)
    burningorscarringofscalpduetotheproductapplied	=	models.CharField(max_length=100,blank=True)
    hairstrengthafterwashingofftheproduct	=	models.CharField(max_length=100,blank=True)
    overalltimetakenintheentireprocess	=	models.CharField(max_length=100,blank=True)
    doesnotirritateorstingoritch	=	models.CharField(max_length=100,blank=True)
    relevanceoverall	=	models.CharField(max_length=100,blank=True)
    concept_uniqueness	=	models.CharField(max_length=100,blank=True)
    comprehension	=	models.CharField(max_length=100,blank=True)
    believability	=	models.CharField(max_length=100,blank=True)
    concept_valueformoney	=	models.CharField(max_length=100,blank=True)
    pack_relevance	=	models.CharField(max_length=100,blank=True)
    pack_uniqueness	=	models.CharField(max_length=100,blank=True)
    pack_valueformoney	=	models.CharField(max_length=100,blank=True)
    overallattractiveness	=	models.CharField(max_length=100,blank=True)
    attractiveorlikepackcolour	=	models.CharField(max_length=100,blank=True)
    attractiveshapeorlikeshape	=	models.CharField(max_length=100,blank=True)
    attractivedesign	=	models.CharField(max_length=100,blank=True)
    innovativedesign	=	models.CharField(max_length=100,blank=True)
    premiumlook	=	models.CharField(max_length=100,blank=True)
    modernorcontemporarylook	=	models.CharField(max_length=100,blank=True)
    traditionallook	=	models.CharField(max_length=100,blank=True)
    elegantlook	=	models.CharField(max_length=100,blank=True)
    eyecatching	=	models.CharField(max_length=100,blank=True)
    wouldstandoutonshelf	=	models.CharField(max_length=100,blank=True)
    wellsealed	=	models.CharField(max_length=100,blank=True)
    safetouse	=	models.CharField(max_length=100,blank=True)
    convenienttouse	=	models.CharField(max_length=100,blank=True)
    suitableforinhomeuse	=	models.CharField(max_length=100,blank=True)
    suitableforoutofhomeuse	=	models.CharField(max_length=100,blank=True)
    goodqualitymaterial	=	models.CharField(max_length=100,blank=True)
    easeofholding	=	models.CharField(max_length=100,blank=True)


    def __str__(self):
        return self.projectname